import type { NextPage } from 'next'
import Head from 'next/head'
import {trpc} from "../utils/trpc";
import { useRef } from 'react';

const QuestionCreator:React.FC=()=>{

  const inputRef = useRef<HTMLInputElement>(null)
  const client = trpc.useContext();
  const {mutate,isLoading} = trpc.useMutation("questions.create",{
    onSuccess:(data)=>{
      client.invalidateQueries(["questions.get-all"]);
      if(!inputRef.current) return;
      inputRef.current.value="";
    }
  })

  return(
    <input 
      ref={inputRef} 
      className="border" 
      disabled={isLoading}
      onKeyDown={(event)=>{
        if(event.key === "Enter"){
          mutate({question:event.currentTarget.value});
        }
    }}></input>
  )
}


const Home: NextPage = () => {

  const {data,isLoading} = trpc.useQuery(["questions.get-all"])

  if(isLoading || !data) return <div>Loading..</div>

  return (
    <div >
      <Head>
        <title>Stairs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main  className="flex flex-col gap-2 p-5">
        <h1 className="text-2xl font-bold">Questions</h1>
        {data.map((question,idx)=>
          <div key={idx}>
            <p>{question.question}</p>
          </div>
        )}
        <QuestionCreator/>
      </main>
    </div>
  )
}

export default Home
